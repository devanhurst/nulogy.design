{"version":3,"sources":["webpack:///./src/pages/components/textarea.js","webpack:///./src/shared/inputProps.js"],"names":["propsRows","name","type","defaultValue","description","inputProps","labelText","id","className","mb","rows","disabled","errorMessage","helpText","requirementText","placeholder","href","STORYBOOK_COMPONENT_URL","inputFieldProps"],"mappings":"2NAuBMA,EAAS,CACb,CACEC,KAAM,OACNC,KAAM,SACNC,aAAc,IACdC,YAAa,+CAEf,CACEH,KAAM,QACNC,KAAM,SACNC,aAAc,YACdC,YAAa,uDAEf,CACEH,KAAM,eACNC,KAAM,SACNC,aAAc,GACdC,YAAa,2BAjBF,mBAmBVC,MAGU,4BACb,kBAAC,IAAD,KACE,kBAAC,SAAD,KACE,4CAEF,kBAAC,IAAD,KACE,kBAAC,KAAD,iBACA,kBAAC,IAAD,uCAGF,kBAAC,IAAD,KACE,kBAAC,KAAD,CAAUC,UAAU,QAAQC,GAAG,aAC/B,kBAAC,IAAD,CAAWC,UAAU,MAArB,qGAQF,kBAAC,IAAD,KACE,kBAAC,IAAD,iBACA,kBAAC,IAAD,KACE,kBAAC,IAAD,sDAIJ,kBAAC,IAAD,KACE,kBAAC,IAAD,mBACA,kBAAC,IAAD,CAAKC,GAAG,MACN,kBAAC,IAAD,oBACA,kBAAC,KAAD,CAAUF,GAAG,cAAcD,UAAU,QAAQI,KAAM,IACnD,kBAAC,IAAD,CAAWF,UAAU,MAClB,6DAGL,kBAAC,IAAD,CAAKC,GAAG,MACN,kBAAC,IAAD,iBACA,kBAAC,KAAD,CAAUF,GAAG,WAAWD,UAAU,QAAQK,UAAQ,IAClD,kBAAC,IAAD,CAAWH,UAAU,MAClB,0DAGL,kBAAC,IAAD,CAAKC,GAAG,MACN,kBAAC,IAAD,cACA,kBAAC,KAAD,CACEF,GAAG,QACHD,UAAU,QACVM,aAAa,yBAEf,kBAAC,IAAD,CAAWJ,UAAU,MAEjB,kFAIN,kBAAC,IAAD,KACE,kBAAC,IAAD,wBACA,kBAAC,KAAD,CACED,GAAG,aACHD,UAAU,QACVO,SAAS,uBACTC,gBAAgB,aAChBC,YAAY,gBAEd,kBAAC,IAAD,CAAWP,UAAU,MAArB,2JAYJ,kBAAC,IAAD,KACE,kBAAC,IAAD,cACA,kBAAC,IAAD,CAAYR,UAAWA,KAGzB,kBAAC,IAAD,KACE,kBAAC,IAAD,2BACA,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMgB,KAAK,oBAAX,WAKN,kBAAC,IAAD,KACE,kBAAC,IAAD,kBACA,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMA,KAASC,IAAL,sBAAV,2B,kCC5IV,kCAAO,IAAMC,EAAkB,CAC7B,CACEjB,KAAM,KACNC,KAAM,SACNC,aAAc,OACdC,YAAa,8BAEf,CACEH,KAAM,OACNC,KAAM,SACNC,aAAc,YACdC,YAAa,gCAEf,CACEH,KAAM,WACNC,KAAM,UACNC,aAAc,QACdC,YAAa,wDAEf,CACEH,KAAM,WACNC,KAAM,OACNC,aAAc,OACdC,YACE,gMAEJ,CACEH,KAAM,YACNC,KAAM,SACNC,aAAc,OACdC,YAAa,4DAEf,CACEH,KAAM,cACNC,KAAM,SACNC,aAAc,OACdC,YACE,+EAEJ,CACEH,KAAM,WACNC,KAAM,UACNC,aAAc,QACdC,YACE,kEAEJ,CACEH,KAAM,kBACNC,KAAM,SACNC,aAAc,OACdC,YAAa,6BAEf,CACEH,KAAM,YACNC,KAAM,SACNC,aAAc,YACdC,YAAa,4CAEf,CACEH,KAAM,WACNC,KAAM,WACNC,aAAc,YACdC,YACE,qFAEJ,CACEH,KAAM,SACNC,KAAM,WACNC,aAAc,YACdC,YACE,0EAIAC,EAAU,UACXa,EADW,CAEd,CACEjB,KAAM,eACNC,KAAM,SACNC,aAAc,OACdC,YAAa,mDAEf,CACEH,KAAM,YACNC,KAAM,mBACNC,aAAc,OACdC,YAAa,2DAIFC","file":"component---src-pages-components-textarea-js-f0a626456bf7bb6e76b5.js","sourcesContent":["import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport Highlight from \"react-highlight\";\nimport {\n  Box,\n  SectionTitle,\n  SubsectionTitle,\n  Title,\n  Link,\n  ListItem,\n  Textarea,\n  List\n} from \"@nulogy/components\";\nimport {\n  Layout,\n  Intro,\n  IntroText,\n  DocSection,\n  PropsTable\n} from \"../../components\";\nimport inputProps from \"../../shared/inputProps\";\nimport { STORYBOOK_COMPONENT_URL } from \"../../shared/const\";\n\nconst propsRows = [\n  {\n    name: \"rows\",\n    type: \"Number\",\n    defaultValue: \"3\",\n    description: \"A custom number of rows to show by default.\"\n  },\n  {\n    name: \"value\",\n    type: \"String\",\n    defaultValue: \"undefined\",\n    description: \"Value of input, used when controlling the component\"\n  },\n  {\n    name: \"defaultValue\",\n    type: \"String\",\n    defaultValue: \"\",\n    description: \"Default value of input\"\n  },\n  ...inputProps\n];\n\nexport default () => (\n  <Layout>\n    <Helmet>\n      <title>Textarea</title>\n    </Helmet>\n    <Intro>\n      <Title>Textarea</Title>\n      <IntroText>A multiline text input field.</IntroText>\n    </Intro>\n\n    <DocSection>\n      <Textarea labelText=\"Label\" id=\"textarea\" />\n      <Highlight className=\"js\">\n        {`import { Textarea } from \"@nulogy/components\";\n\n<Textarea labelText=\"Label\" id=\"textarea\" />\n`}\n      </Highlight>\n    </DocSection>\n\n    <DocSection>\n      <SectionTitle>Use when</SectionTitle>\n      <List>\n        <ListItem>Users need to enter multiple lines of text.</ListItem>\n      </List>\n    </DocSection>\n\n    <DocSection>\n      <SectionTitle>Variations</SectionTitle>\n      <Box mb=\"x6\">\n        <SubsectionTitle>Custom size</SubsectionTitle>\n        <Textarea id=\"custom-size\" labelText=\"Label\" rows={2} />\n        <Highlight className=\"js\">\n          {'<Textarea id=\"custom-size\" labelText=\"Label\" rows={2} />'}\n        </Highlight>\n      </Box>\n      <Box mb=\"x6\">\n        <SubsectionTitle>Disabled</SubsectionTitle>\n        <Textarea id=\"disabled\" labelText=\"Label\" disabled />\n        <Highlight className=\"js\">\n          {'<Textarea id=\"disabled\" labelText=\"Label\" disabled />'}\n        </Highlight>\n      </Box>\n      <Box mb=\"x6\">\n        <SubsectionTitle>Error</SubsectionTitle>\n        <Textarea\n          id=\"error\"\n          labelText=\"Label\"\n          errorMessage=\"Please fill this out\"\n        />\n        <Highlight className=\"js\">\n          {\n            '<Textarea id=\"error\" labelText=\"Label\" errorMessage=\"Please fill this out\" />'\n          }\n        </Highlight>\n      </Box>\n      <Box>\n        <SubsectionTitle>With all labels</SubsectionTitle>\n        <Textarea\n          id=\"all-labels\"\n          labelText=\"Label\"\n          helpText=\"Additional help text\"\n          requirementText=\"(Optional)\"\n          placeholder=\"Placeholder\"\n        />\n        <Highlight className=\"js\">\n          {`<Textarea\n  id=\"all-labels\"\n  labelText=\"Label\"\n  helpText=\"Additional help text\"\n  requirementText=\"(Optional)\"\n  placeholder=\"Placeholder\"\n/>`}\n        </Highlight>\n      </Box>\n    </DocSection>\n\n    <DocSection>\n      <SectionTitle>Props</SectionTitle>\n      <PropsTable propsRows={propsRows} />\n    </DocSection>\n\n    <DocSection>\n      <SectionTitle>Related components</SectionTitle>\n      <List>\n        <ListItem>\n          <Link href=\"/components/form\">Form</Link>\n        </ListItem>\n      </List>\n    </DocSection>\n\n    <DocSection>\n      <SectionTitle>Resources</SectionTitle>\n      <List>\n        <ListItem>\n          <Link href={`${STORYBOOK_COMPONENT_URL}textarea--textarea`}>\n            View in Storybook\n          </Link>\n        </ListItem>\n      </List>\n    </DocSection>\n  </Layout>\n);\n","export const inputFieldProps = [\n  {\n    name: \"id\",\n    type: \"String\",\n    defaultValue: \"null\",\n    description: \"A unique ID for this input\"\n  },\n  {\n    name: \"name\",\n    type: \"String\",\n    defaultValue: \"undefined\",\n    description: \"A unique name for this input\"\n  },\n  {\n    name: \"disabled\",\n    type: \"Boolean\",\n    defaultValue: \"false\",\n    description: \"Marks the field as disabled and disallows user input\"\n  },\n  {\n    name: \"helpText\",\n    type: \"Node\",\n    defaultValue: \"null\",\n    description:\n      \"Placed below the label to provide assistance on how to fill out a field or the expected format. It can also provide an explanation of why the information is needed and how it will be used.\"\n  },\n  {\n    name: \"labelText\",\n    type: \"String\",\n    defaultValue: \"null\",\n    description: \"Informs users what the corresponding input field is for.\"\n  },\n  {\n    name: \"placeholder\",\n    type: \"String\",\n    defaultValue: \"null\",\n    description:\n      \"A hint to the expected format for the field. Not a replacement for a label.\"\n  },\n  {\n    name: \"required\",\n    type: \"Boolean\",\n    defaultValue: \"false\",\n    description:\n      \"Makes the field require selection before the form will submit.\"\n  },\n  {\n    name: \"requirementText\",\n    type: \"String\",\n    defaultValue: \"null\",\n    description: \"(Optional) or (Required).\"\n  },\n  {\n    name: \"className\",\n    type: \"String\",\n    defaultValue: \"undefined\",\n    description: \"className passed to the wrapper element.\"\n  },\n  {\n    name: \"onChange\",\n    type: \"Function\",\n    defaultValue: \"undefined\",\n    description:\n      \"Change event handler that will be run whenever the value of the input is updated.\"\n  },\n  {\n    name: \"onBlur\",\n    type: \"Function\",\n    defaultValue: \"undefined\",\n    description:\n      \"Change event handler that will be run whenever the input loses focus.\"\n  }\n];\n\nconst inputProps = [\n  ...inputFieldProps,\n  {\n    name: \"errorMessage\",\n    type: \"String\",\n    defaultValue: \"null\",\n    description: \"Displays an error message and applies red style\"\n  },\n  {\n    name: \"errorList\",\n    type: \"Array of Strings\",\n    defaultValue: \"null\",\n    description: \"Displays list of error messages and applies red style\"\n  }\n];\n\nexport default inputProps;\n"],"sourceRoot":""}