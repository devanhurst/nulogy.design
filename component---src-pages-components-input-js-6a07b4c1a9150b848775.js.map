{"version":3,"sources":["webpack:///./src/pages/components/input.js","webpack:///./src/shared/inputProps.js"],"names":["propsRows","name","type","defaultValue","description","inputProps","id","labelText","className","mb","placeholder","disabled","errorMessage","helpText","requirementText","prefix","suffix","href","STORYBOOK_COMPONENT_URL","inputFieldProps"],"mappings":"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","file":"component---src-pages-components-input-js-6a07b4c1a9150b848775.js","sourcesContent":["import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport Highlight from \"react-highlight\";\nimport {\n  Box,\n  SectionTitle,\n  SubsectionTitle,\n  Title,\n  Input,\n  Link,\n  ListItem,\n  List\n} from \"@nulogy/components\";\nimport {\n  Layout,\n  Intro,\n  IntroText,\n  DocSection,\n  PropsTable\n} from \"../../components\";\nimport inputProps from \"../../shared/inputProps\";\nimport { STORYBOOK_COMPONENT_URL } from \"../../shared/const\";\n\nconst prefixSuffixProps = [\n  {\n    name: \"prefix\",\n    type: \"String\",\n    defaultValue: \"null\",\n    description: \"Displays input field prefix label\"\n  },\n  {\n    name: \"prefixWidth\",\n    type: \"String\",\n    defaultValue: \"null\",\n    description: \"Controls the width of prefix label\"\n  },\n  {\n    name: \"prefixAlignment\",\n    type: \"String\",\n    defaultValue: \"left\",\n    description:\n      \"Aligns prefix label text. Accepts left, center, and right value.\"\n  },\n  {\n    name: \"suffix\",\n    type: \"String\",\n    defaultValue: \"null\",\n    description: \"Displays input field suffix label\"\n  },\n  {\n    name: \"suffixWidth\",\n    type: \"String\",\n    defaultValue: \"null\",\n    description: \"Controls the width of suffix label\"\n  },\n  {\n    name: \"suffixAlignment\",\n    type: \"String\",\n    defaultValue: \"left\",\n    description:\n      \"Aligns suffix label text. Accepts left, center, and right value.\"\n  }\n];\n\nconst propsRows = [\n  {\n    name: \"value\",\n    type: \"String\",\n    defaultValue: \"undefined\",\n    description: \"Value of input, used when controlling the component\"\n  },\n  {\n    name: \"defaultValue\",\n    type: \"String\",\n    defaultValue: \"\",\n    description: \"Default value of input\"\n  },\n  ...inputProps,\n  ...prefixSuffixProps\n];\n\nexport default () => (\n  <Layout>\n    <Helmet>\n      <title>Input</title>\n    </Helmet>\n    <Intro>\n      <Title>Input</Title>\n      <IntroText>An input field that users can type into.</IntroText>\n    </Intro>\n    <DocSection>\n      <Input id=\"input\" labelText=\"Label\" />\n      <Highlight className=\"js\">\n        {`import { Input } from \"@nulogy/components\";\n\n<Input id=\"input\" labelText=\"Input label\" />`}\n      </Highlight>\n    </DocSection>\n    <DocSection>\n      <SectionTitle>Use when</SectionTitle>\n      <List>\n        <ListItem>\n          Users need to enter information that is best communicated in text\n          form.\n        </ListItem>\n        <ListItem>\n          You need to collect information that varies from one user to another\n          and canâ€™t be represented as a set of pre-determined choices.\n        </ListItem>\n      </List>\n    </DocSection>\n    <DocSection>\n      <SectionTitle>Variations</SectionTitle>\n      <Box mb=\"x6\">\n        <SubsectionTitle>Disabled</SubsectionTitle>\n        <Input labelText=\"Label\" placeholder=\"I'm an input\" disabled />\n        <Highlight className=\"js\">\n          {'<Input id=\"disabled-input\" placeholder=\"I\\'m an input\" disabled />'}\n        </Highlight>\n      </Box>\n      <Box mb=\"x6\">\n        <SubsectionTitle>Error</SubsectionTitle>\n        <Input labelText=\"Label\" errorMessage=\"Error message\" />\n        <Highlight className=\"js\">\n          {\n            '<Input labelText=\"Label\" id=\"error-input\" errorMessage=\"Error message\" />'\n          }\n        </Highlight>\n      </Box>\n      <Box mb=\"x6\">\n        <SubsectionTitle>With all labels</SubsectionTitle>\n        <Input\n          id=\"all-labels\"\n          labelText=\"Label\"\n          helpText=\"Additional help text\"\n          requirementText=\"(Optional)\"\n          placeholder=\"I'm an input\"\n        />\n        <Highlight className=\"js\">\n          {`<Input\n  id=\"all-labels\"\n  labelText=\"Label\"\n  helpText=\"Additional help text\"\n  requirementText=\"(Optional)\"\n  placeholder=\"I'm an input\"\n/>`}\n        </Highlight>\n      </Box>\n      <Box mb=\"x6\">\n        <SubsectionTitle>With Prefix and Suffix</SubsectionTitle>\n        <Input\n          id=\"all-labels\"\n          labelText=\"Label\"\n          placeholder=\"I'm an input\"\n          prefix=\"I'm prefix label\"\n          suffix=\"I'm suffix label\"\n        />\n        <Highlight className=\"js\">\n          {`<Input\n  id=\"all-labels\"\n  labelText=\"Label\"\n  placeholder=\"I'm an input\"\n  prefix=\"I'm prefix label\"\n  suffix=\"I'm sufix label\"\n/>`}\n        </Highlight>\n      </Box>\n    </DocSection>\n    <DocSection>\n      <SectionTitle>Guidelines</SectionTitle>\n      <List>\n        <ListItem>\n          Whenever possible match the width of the input field with the expected\n          length of the input. If that is not possible then fill the entire\n          width of the container.\n        </ListItem>\n      </List>\n    </DocSection>\n    <DocSection>\n      <SectionTitle>Props</SectionTitle>\n      <PropsTable propsRows={propsRows} />\n    </DocSection>\n\n    <DocSection>\n      <SectionTitle>Related components</SectionTitle>\n      <List>\n        <ListItem>\n          <Link href=\"/components/form\">Form</Link>\n        </ListItem>\n      </List>\n    </DocSection>\n\n    <DocSection>\n      <SectionTitle>Resources</SectionTitle>\n      <List>\n        <ListItem>\n          <Link href={`${STORYBOOK_COMPONENT_URL}input--input`}>\n            View in Storybook\n          </Link>\n        </ListItem>\n      </List>\n    </DocSection>\n  </Layout>\n);\n","export const inputFieldProps = [\n  {\n    name: \"id\",\n    type: \"String\",\n    defaultValue: \"null\",\n    description: \"A unique ID for this input\"\n  },\n  {\n    name: \"name\",\n    type: \"String\",\n    defaultValue: \"undefined\",\n    description: \"A unique name for this input\"\n  },\n  {\n    name: \"disabled\",\n    type: \"Boolean\",\n    defaultValue: \"false\",\n    description: \"Marks the field as disabled and disallows user input\"\n  },\n  {\n    name: \"helpText\",\n    type: \"Node\",\n    defaultValue: \"null\",\n    description:\n      \"Placed below the label to provide assistance on how to fill out a field or the expected format. It can also provide an explanation of why the information is needed and how it will be used.\"\n  },\n  {\n    name: \"labelText\",\n    type: \"String\",\n    defaultValue: \"null\",\n    description: \"Informs users what the corresponding input field is for.\"\n  },\n  {\n    name: \"placeholder\",\n    type: \"String\",\n    defaultValue: \"null\",\n    description:\n      \"A hint to the expected format for the field. Not a replacement for a label.\"\n  },\n  {\n    name: \"required\",\n    type: \"Boolean\",\n    defaultValue: \"false\",\n    description:\n      \"Makes the field require selection before the form will submit.\"\n  },\n  {\n    name: \"requirementText\",\n    type: \"String\",\n    defaultValue: \"null\",\n    description: \"(Optional) or (Required).\"\n  },\n  {\n    name: \"className\",\n    type: \"String\",\n    defaultValue: \"undefined\",\n    description: \"className passed to the wrapper element.\"\n  },\n  {\n    name: \"onChange\",\n    type: \"Function\",\n    defaultValue: \"undefined\",\n    description:\n      \"Change event handler that will be run whenever the value of the input is updated.\"\n  },\n  {\n    name: \"onBlur\",\n    type: \"Function\",\n    defaultValue: \"undefined\",\n    description:\n      \"Change event handler that will be run whenever the input loses focus.\"\n  }\n];\n\nconst inputProps = [\n  ...inputFieldProps,\n  {\n    name: \"errorMessage\",\n    type: \"String\",\n    defaultValue: \"null\",\n    description: \"Displays an error message and applies red style\"\n  },\n  {\n    name: \"errorList\",\n    type: \"Array of Strings\",\n    defaultValue: \"null\",\n    description: \"Displays list of error messages and applies red style\"\n  }\n];\n\nexport default inputProps;\n"],"sourceRoot":""}