{"version":3,"sources":["webpack:///./src/shared/selectProps.js","webpack:///./src/shared/inputProps.js","webpack:///./src/pages/components/time-picker.js","webpack:///./src/shared/const.js"],"names":["selectProps","name","type","defaultValue","description","inputProps","map","prop","inputFieldProps","propsRows","filter","className","href","STORYBOOK_COMPONENT_URL","STORYBOOK_URL","STORYBOOK_PAGE_URL"],"mappings":"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","file":"component---src-pages-components-time-picker-js-124ae478947f85fa865a.js","sourcesContent":["import inputProps from \"./inputProps\";\n\nconst selectProps = [\n  {\n    name: \"autocomplete\",\n    type: \"Boolean\",\n    defaultValue: \"true\",\n    description: \"Whether or not typing will filter the options list\"\n  },\n  {\n    name: \"options\",\n    type: \"Array\",\n    defaultValue: \"Required\",\n    description:\n      \"The options available to be selected, containing a value and a label\"\n  },\n  {\n    name: \"maxHeight\",\n    type: \"String\",\n    defaultValue: \"256px\",\n    description: \"Max height of the select dropdown menu, content is scrollable\"\n  },\n  {\n    name: \"multiselect\",\n    type: \"Boolean\",\n    defaultValue: \"false\",\n    description: \"Whether or not multiple selections can be made\"\n  },\n  {\n    name: \"value\",\n    type: \"String | Array\",\n    defaultValue: \"undefined\",\n    description: \"Value of input, used when controlling the component\"\n  },\n  {\n    name: \"defaultValue\",\n    type: \"String | Array\",\n    defaultValue: \"\",\n    description: \"Default value of input\"\n  },\n  {\n    name: \"menuIsOpen\",\n    type: \"Boolean\",\n    defaultValue: \"undefined\",\n    description:\n      \"Controls whether the menu is open; If unset, then NDS controls this implicitly instead\"\n  },\n  {\n    name: \"onMenuOpen\",\n    type: \"Function\",\n    defaultValue: \"undefined\",\n    description: \"Event handler for when the menu is opened\"\n  },\n  {\n    name: \"onMenuClose\",\n    type: \"Function\",\n    defaultValue: \"undefined\",\n    description: \"Event handler for when the menu is closed\"\n  },\n  {\n    name: \"onInputChange\",\n    type: \"Function\",\n    defaultValue: \"undefined\",\n    description: \"Event handler for when the value typed into the input changes\"\n  },\n  {\n    name: \"menuPosition\",\n    type: \"string\",\n    defaultValue: \"absolute\",\n    description: \"The CSS position value of the menu. ex: 'fixed'\"\n  },\n  {\n    name: \"components\",\n    type: \"Object<ComponentName: ReactNode>\",\n    defaultValue: \"undefined\",\n    description:\n      \"Pass in an object with the keys of the component you would like to replace\"\n  },\n  {\n    name: \"closeMenuOnSelect\",\n    type: \"Boolean\",\n    defaultValue: \"true\",\n    description: \"Close the select menu when the user selects an option\"\n  },\n  ...inputProps.map(prop => {\n    if (prop.name === \"required\") {\n      return {\n        name: \"required\",\n        type: \"boolean\",\n        defaultValue: \"false\",\n        description:\n          \"adds requirement text and asterisk to the label, NOTE: this does not behave like a required html input that blocks form submission when no value is entered, you must check the value of the select manually when submitting\"\n      };\n    }\n    return prop;\n  })\n];\n\nexport default selectProps;\n","export const inputFieldProps = [\n  {\n    name: \"id\",\n    type: \"String\",\n    defaultValue: \"null\",\n    description: \"A unique ID for this input\"\n  },\n  {\n    name: \"name\",\n    type: \"String\",\n    defaultValue: \"undefined\",\n    description: \"A unique name for this input\"\n  },\n  {\n    name: \"disabled\",\n    type: \"Boolean\",\n    defaultValue: \"false\",\n    description: \"Marks the field as disabled and disallows user input\"\n  },\n  {\n    name: \"helpText\",\n    type: \"Node\",\n    defaultValue: \"null\",\n    description:\n      \"Placed below the label to provide assistance on how to fill out a field or the expected format. It can also provide an explanation of why the information is needed and how it will be used.\"\n  },\n  {\n    name: \"labelText\",\n    type: \"String\",\n    defaultValue: \"null\",\n    description: \"Informs users what the corresponding input field is for.\"\n  },\n  {\n    name: \"placeholder\",\n    type: \"String\",\n    defaultValue: \"null\",\n    description:\n      \"A hint to the expected format for the field. Not a replacement for a label.\"\n  },\n  {\n    name: \"required\",\n    type: \"Boolean\",\n    defaultValue: \"false\",\n    description:\n      \"Makes the field require selection before the form will submit.\"\n  },\n  {\n    name: \"requirementText\",\n    type: \"String\",\n    defaultValue: \"null\",\n    description: \"(Optional) or (Required).\"\n  },\n  {\n    name: \"className\",\n    type: \"String\",\n    defaultValue: \"undefined\",\n    description: \"className passed to the wrapper element.\"\n  },\n  {\n    name: \"onChange\",\n    type: \"Function\",\n    defaultValue: \"undefined\",\n    description:\n      \"Change event handler that will be run whenever the value of the input is updated.\"\n  },\n  {\n    name: \"onBlur\",\n    type: \"Function\",\n    defaultValue: \"undefined\",\n    description:\n      \"Change event handler that will be run whenever the input loses focus.\"\n  }\n];\n\nconst inputProps = [\n  ...inputFieldProps,\n  {\n    name: \"errorMessage\",\n    type: \"String\",\n    defaultValue: \"null\",\n    description: \"Displays an error message and applies red style\"\n  },\n  {\n    name: \"errorList\",\n    type: \"Array of Strings\",\n    defaultValue: \"null\",\n    description: \"Displays list of error messages and applies red style\"\n  }\n];\n\nexport default inputProps;\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport {\n  SectionTitle,\n  Title,\n  TimePicker,\n  ListItem,\n  List,\n  Link\n} from \"@nulogy/components\";\nimport Highlight from \"react-highlight\";\nimport {\n  Layout,\n  Intro,\n  IntroText,\n  DocSection,\n  PropsTable\n} from \"../../components\";\nimport selectProps from \"../../shared/selectProps\";\nimport { STORYBOOK_COMPONENT_URL } from \"../../shared/const\";\n\nconst propsRows = [\n  {\n    name: \"timeFormat\",\n    type: \"String\",\n    defaultValue: \"hh:mm aa\",\n    description:\n      \"The default time format (see date-fns for available time formats)\"\n  },\n  {\n    name: \"interval\",\n    type: \"Number\",\n    defaultValue: \"15\",\n    description: \"The time difference in minutes between the time options\"\n  },\n  {\n    name: \"minTime\",\n    type: \"24 hour time string e.g: 02:30\",\n    defaultValue: \"undefined\",\n    description: \"The latest time that can be selected.\"\n  },\n  {\n    name: \"maxTime\",\n    type: \"24 hour time string e.g: 02:30\",\n    defaultValue: \"undefined\",\n    description: \"The latest time that can be selected.\"\n  },\n  ...selectProps.filter(prop => prop.name !== \"options\")\n];\n\nexport default () => (\n  <Layout>\n    <Helmet>\n      <title>Time Picker</title>\n    </Helmet>\n    <Intro>\n      <Title>Time Picker</Title>\n      <IntroText>Time pickers allow users to easily enter times.</IntroText>\n    </Intro>\n    <DocSection>\n      <TimePicker />\n      <Highlight className=\"js\">\n        {`import { TimePicker } from \"@nulogy/components\";\n\n<TimePicker\n  onChange={(val) => val}\n  onInputChange={(val) => val}\n/>\n`}\n      </Highlight>\n    </DocSection>\n    <DocSection>\n      <SectionTitle>Props</SectionTitle>\n      <PropsTable propsRows={propsRows} />\n    </DocSection>\n    <DocSection>\n      <SectionTitle>Related components</SectionTitle>\n      <List>\n        <ListItem>\n          <Link href=\"/components/date-picker\">Date Picker</Link>\n        </ListItem>\n        <ListItem>\n          <Link href=\"/components/input\">Input</Link>\n        </ListItem>\n        <ListItem>\n          <Link href=\"/components/form\">Form</Link>\n        </ListItem>\n      </List>\n    </DocSection>\n\n    <DocSection>\n      <SectionTitle>Resources</SectionTitle>\n      <List>\n        <ListItem>\n          <Link href={`${STORYBOOK_COMPONENT_URL}timepicker--default`}>\n            View in Storybook\n          </Link>\n        </ListItem>\n      </List>\n    </DocSection>\n  </Layout>\n);\n","export const STORYBOOK_URL = \"https://storybook.nulogy.design/?path=/story/\";\nexport const STORYBOOK_COMPONENT_URL = `${STORYBOOK_URL}components-`;\nexport const STORYBOOK_PAGE_URL = `${STORYBOOK_URL}pages-`;\n"],"sourceRoot":""}