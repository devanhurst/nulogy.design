{"version":3,"sources":["webpack:///./src/pages/components/toast.js"],"names":["ToastExample","useState","triggered","setTriggered","onClick","onHide","propsRows","name","type","defaultValue","description","className","href","STORYBOOK_COMPONENT_URL"],"mappings":"8FAAA,qGAwBMA,EAAe,WAAO,IAAD,EACSC,oBAAS,GAApCC,EADkB,KACPC,EADO,KAQzB,OACE,oCACE,kBAAC,IAAD,CAAQC,QARS,WACnBD,GAAcD,KAOZ,iBACA,kBAAC,KAAD,CAAOA,UAAWA,EAAWG,OANX,WACpBF,GAAa,KAKX,YAOAG,EAAY,CAChB,CACEC,KAAM,YACNC,KAAM,UACNC,aAAc,QACdC,YAAa,4CAEf,CACEH,KAAM,SACNC,KAAM,WACNE,YAAa,qDAEf,CACEH,KAAM,SACNC,KAAM,WACNE,YACE,+EAEJ,CACEH,KAAM,WACNC,KAAM,WACNE,YACE,gHAEJ,CACEH,KAAM,eACNC,KAAM,SACNE,YAAa,8DAEf,CACEH,KAAM,cACNC,KAAM,UACNE,YACE,+HAIS,4BACb,kBAAC,IAAD,KACE,kBAAC,SAAD,KACE,yCAEF,kBAAC,IAAD,KACE,kBAAC,KAAD,cACA,kBAAC,IAAD,sKAOF,kBAAC,IAAD,KACE,kBAACV,EAAD,MACA,kBAAC,IAAD,CAAWW,UAAU,MAArB,0GAQF,kBAAC,IAAD,KACE,kBAAC,IAAD,iBACA,kBAAC,IAAD,KACE,kBAAC,IAAD,kKAKA,kBAAC,IAAD,iGAIA,kBAAC,IAAD,kEAMJ,kBAAC,IAAD,KACE,kBAAC,IAAD,wBACA,kBAAC,IAAD,KACE,kBAAC,IAAD,gEAGA,kBAAC,IAAD,2FAOJ,kBAAC,IAAD,KACE,kBAAC,IAAD,cACA,kBAAC,KAAD,kCAC4B,kBAAC,IAAD,CAAMC,KAAK,qBAAX,SAA4C,IADxE,6DAIA,kBAAC,IAAD,CAAYN,UAAWA,KAGzB,kBAAC,IAAD,KACE,kBAAC,IAAD,2BACA,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMM,KAAK,qBAAX,YAKN,kBAAC,IAAD,KACE,kBAAC,IAAD,kBACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMA,KAASC,IAAL,gBAAV","file":"component---src-pages-components-toast-js-0b45bbe5d10eab0d0eae.js","sourcesContent":["/* eslint-disable no-unused-vars, quotes, react/self-closing-comp */\n\nimport React, { useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport Highlight from \"react-highlight\";\nimport {\n  Button,\n  SectionTitle,\n  Title,\n  Link,\n  List,\n  ListItem,\n  Toast,\n  Text\n} from \"@nulogy/components\";\nimport {\n  Layout,\n  Intro,\n  IntroText,\n  DocSection,\n  PropsTable\n} from \"../../components\";\nimport { STORYBOOK_COMPONENT_URL } from \"../../shared/const\";\n\nconst ToastExample = () => {\n  const [triggered, setTriggered] = useState(false);\n  const triggerToast = () => {\n    setTriggered(!triggered);\n  };\n  const onHideHandler = () => {\n    setTriggered(false);\n  };\n  return (\n    <>\n      <Button onClick={triggerToast}>Trigger Toast</Button>\n      <Toast triggered={triggered} onHide={onHideHandler}>\n        Toast!\n      </Toast>\n    </>\n  );\n};\n\nconst propsRows = [\n  {\n    name: \"triggered\",\n    type: \"boolean\",\n    defaultValue: \"false\",\n    description: \"Whether to display to the tooltip or not\"\n  },\n  {\n    name: \"onShow\",\n    type: \"function\",\n    description: \"callback that is called when the tooltip is shown\"\n  },\n  {\n    name: \"onHide\",\n    type: \"function\",\n    description:\n      \"callback that is called when the tooltip is dismissed or begins to fade out\"\n  },\n  {\n    name: \"onHidden\",\n    type: \"function\",\n    description:\n      \"callback that is called when the tooltip has been completely hidden after the fade out animation is complete\"\n  },\n  {\n    name: \"showDuration\",\n    type: \"number\",\n    description: \"length of time in ms to display the Toast before hiding it\"\n  },\n  {\n    name: \"isCloseable\",\n    type: \"boolean\",\n    description:\n      \"displays a close button in the Toast when true, and the Toast must then by manually dismissed by clicking the close button\"\n  }\n];\n\nexport default () => (\n  <Layout>\n    <Helmet>\n      <title>Toast</title>\n    </Helmet>\n    <Intro>\n      <Title>Toast</Title>\n      <IntroText>\n        Temporarily displayed messages that provide additional information or\n        feedback about a user's action or event. Hovering over a message will\n        keep it in view.\n      </IntroText>\n    </Intro>\n\n    <DocSection>\n      <ToastExample />\n      <Highlight className=\"js\">\n        {`<Toast triggered={triggered} onHide={onHideHandler}>\n            Saved\n          </Toast>\n        `}\n      </Highlight>\n    </DocSection>\n\n    <DocSection>\n      <SectionTitle>Use when</SectionTitle>\n      <List>\n        <ListItem>\n          There are low priority messages to display in response to some event\n          or action â€” i.e. messages that are helpful, although not intrinsic to\n          the experience\n        </ListItem>\n        <ListItem>\n          The information contained is very concise and easy to read and\n          understand within seconds\n        </ListItem>\n        <ListItem>\n          The message is less than 2 lines long or 150 characters\n        </ListItem>\n      </List>\n    </DocSection>\n\n    <DocSection>\n      <SectionTitle>Don't use when </SectionTitle>\n      <List>\n        <ListItem>\n          The information contained is vital to completing a task\n        </ListItem>\n        <ListItem>\n          The message is too long to read and understood within seconds (> 150\n          characters)\n        </ListItem>\n      </List>\n    </DocSection>\n\n    <DocSection>\n      <SectionTitle>Props</SectionTitle>\n      <Text>\n        All props availble on the <Link href=\"/components/alert\">Alert</Link>{\" \"}\n        component are available in addition to the options below.\n      </Text>\n      <PropsTable propsRows={propsRows} />\n    </DocSection>\n\n    <DocSection>\n      <SectionTitle>Related components</SectionTitle>\n      <List>\n        <ListItem>\n          <Link href=\"/components/alert\">Alert</Link>\n        </ListItem>\n      </List>\n    </DocSection>\n\n    <DocSection>\n      <SectionTitle>Resources</SectionTitle>\n      <ListItem>\n        <Link href={`${STORYBOOK_COMPONENT_URL}toast--toast`}>\n          View in Storybook\n        </Link>\n      </ListItem>\n    </DocSection>\n  </Layout>\n);\n"],"sourceRoot":""}