{"version":3,"sources":["webpack:///./src/templates/markdown.js"],"names":["MarkdownStyles","styled","Box","color","theme","colors","black","h1","fontWeight","fontWeights","light","marginTop","marginBottom","paddingBottom","space","x2","fontSize","fontSizes","heading1","lineHeight","lineHeights","base","h2","x1","heading2","normal","h3","heading3","medium","h4","heading4","blue","darkBlue","pre","background","whiteGrey","padding","borderRadius","radii","code","small","darkGrey","smallTextBase","Template","markdownRemark","data","frontmatter","html","title","intro","maxWidth","mb","className","dangerouslySetInnerHTML","__html","pageQuery"],"mappings":"gQAQMA,EAAiBC,YAAOC,KAAV,+EAAGD,CAAY,CACjCE,MAAOC,KAAMC,OAAOC,MAEpBC,IAAE,GACAC,WAAYJ,KAAMK,YAAYC,MAC9BC,UAAW,EACXC,aAAc,EACdC,cAAeT,KAAMU,MAAMC,GAC3BC,SAAUZ,KAAMa,UAAUC,SAC1BC,WAAYf,KAAMgB,YAAYC,MAN9B,aAOYjB,KAAMK,YAAYC,MAP9B,GAUFY,GAAI,CACFX,UAAW,OACXC,aAAcR,KAAMU,MAAMS,GAC1BP,SAAUZ,KAAMa,UAAUO,SAC1BL,WAAYf,KAAMgB,YAAYI,SAC9BhB,WAAYJ,KAAMK,YAAYgB,QAGhCC,GAAI,CACFf,UAAW,OACXC,aAAcR,KAAMU,MAAMS,GAC1BP,SAAUZ,KAAMa,UAAUU,SAC1BR,WAAYf,KAAMgB,YAAYO,SAC9BnB,WAAYJ,KAAMK,YAAYmB,QAGhCC,GAAI,CACFlB,UAAW,OACXC,aAAcR,KAAMU,MAAMS,GAC1BP,SAAUZ,KAAMa,UAAUa,SAC1BX,WAAYf,KAAMgB,YAAYU,SAC9BtB,WAAYJ,KAAMK,YAAYmB,QAGhC,eAAgB,CACdzB,MAAOC,KAAMC,OAAO0B,MAGtB,UAAW,CACT5B,MAAOC,KAAMC,OAAO2B,UAGtBC,IAAK,CACHC,WAAY9B,KAAMC,OAAO8B,UACzBC,QAAShC,KAAMU,MAAMC,GACrBsB,aAAcjC,KAAMkC,MAAMV,QAG5BW,KAAM,CACJvB,SAAUZ,KAAMa,UAAUuB,MAC1BrC,MAAOC,KAAMC,OAAOoC,SACpBtB,WAAYf,KAAMgB,YAAYsB,eAGhC,SAAU,CACRR,WAAY9B,KAAMC,OAAO8B,aAId,SAASQ,EAAT,GAEX,IACMC,EADP,EADDC,KAEQD,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACrB,OACE,kBAAC,IAAD,KACE,kBAAC/C,EAAD,KACE,kBAAC,SAAD,KACE,+BAAQ8C,EAAYE,MAApB,2BAEF,kBAAC,KAAD,KAAQF,EAAYE,OACnBF,EAAYG,OAAS,kBAAC,IAAD,KAAYH,EAAYG,OAC9C,kBAAC,IAAD,CAAKC,SAAU,IAAKC,GAAG,MACrB,yBACEC,UAAU,oBACVC,wBAAyB,CAAEC,OAAQP,QAYxC,IAAMQ,EAAS","file":"component---src-templates-markdown-js-34ee94ec19ef4cd49055.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\nimport { Helmet } from \"react-helmet\";\nimport { Title, Box, theme } from \"@nulogy/components\";\nimport styled from \"styled-components\";\nimport { Intro, IntroText, Layout } from \"../components\";\n\nconst MarkdownStyles = styled(Box)({\n  color: theme.colors.black,\n\n  h1: {\n    fontWeight: theme.fontWeights.light,\n    marginTop: 0,\n    marginBottom: 0,\n    paddingBottom: theme.space.x2,\n    fontSize: theme.fontSizes.heading1,\n    lineHeight: theme.lineHeights.base,\n    fontWeight: theme.fontWeights.light\n  },\n\n  h2: {\n    marginTop: \"24px\",\n    marginBottom: theme.space.x1,\n    fontSize: theme.fontSizes.heading2,\n    lineHeight: theme.lineHeights.heading2,\n    fontWeight: theme.fontWeights.normal\n  },\n\n  h3: {\n    marginTop: \"24px\",\n    marginBottom: theme.space.x1,\n    fontSize: theme.fontSizes.heading3,\n    lineHeight: theme.lineHeights.heading3,\n    fontWeight: theme.fontWeights.medium\n  },\n\n  h4: {\n    marginTop: \"24px\",\n    marginBottom: theme.space.x1,\n    fontSize: theme.fontSizes.heading4,\n    lineHeight: theme.lineHeights.heading4,\n    fontWeight: theme.fontWeights.medium\n  },\n\n  \"a, a:visited\": {\n    color: theme.colors.blue\n  },\n\n  \"a:hover\": {\n    color: theme.colors.darkBlue\n  },\n\n  pre: {\n    background: theme.colors.whiteGrey,\n    padding: theme.space.x2,\n    borderRadius: theme.radii.medium\n  },\n\n  code: {\n    fontSize: theme.fontSizes.small,\n    color: theme.colors.darkGrey,\n    lineHeight: theme.lineHeights.smallTextBase\n  },\n\n  \"p code\": {\n    background: theme.colors.whiteGrey\n  }\n});\n\nexport default function Template({\n  data // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data; // data.markdownRemark holds our post data\n  const { frontmatter, html } = markdownRemark;\n  return (\n    <Layout>\n      <MarkdownStyles>\n        <Helmet>\n          <title>{frontmatter.title} Nulogy Design System </title>\n        </Helmet>\n        <Title>{frontmatter.title}</Title>\n        {frontmatter.intro && <IntroText>{frontmatter.intro}</IntroText>}\n        <Box maxWidth={800} mb=\"x8\">\n          <div\n            className=\"blog-post-content\"\n            dangerouslySetInnerHTML={{ __html: html }} // eslint-disable-line\n          />\n        </Box>\n      </MarkdownStyles>\n    </Layout>\n  );\n}\n\nTemplate.propTypes = {\n  data: PropTypes.node.isRequired\n};\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        intro\n        path\n        title\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}